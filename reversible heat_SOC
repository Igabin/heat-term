%% 전극 위치 (zi) 설정: 0, 0.25, 0.5, 0.75, 1
zi = 0:0.25:1;  % 전극의 위치 (5개 구간)
delta_z = zi(2) - zi(1);  % 각 구간의 길이 (0.25)

% SOC 값에 따른 OCP 계산 (각각 음극과 양극)
SOC_values = 0:0.01:1; % SOC 값 범위 (0부터 100까지)
Uocp_neg_0 = @(x) (-0.16 + 1.32*exp(-3.0*x) + 10.0*exp(-2000.0*x));  % SOC = 0일 때 음극 OCP 식
Uocp_neg_100 = @(x) (-20000*exp(-2000*x) - 3.96*exp(-3*x));  % SOC = 100일 때 음극 OCP 식

Uocp_pos_0 = @(x) (4.19829 + 0.0565661*tanh(-14.5546*x+8.60942) - 0.0275479*(1./(0.998432-x).^0.492465) - 1.90111 - 0.157123*exp(-0.04738*x.^8) + 0.810239*exp(-40*(x-0.133875)));  % SOC = 0일 때 양극 OCP
Uocp_pos_100 = @(x) (-32.4096*exp(-40*(-0.133875 + x)) - 0.0135664./((0.998432 - x).^1.49247) + 0.0595559*exp(-0.04738*x.^8).*x.^7 - 0.823297*(sech(8.60942 - 14.5546*x)).^2);  % SOC = 100일 때 양극 OCP

% 각 SOC 값에 대한 OCP 계산
OCP_neg_values_0 = Uocp_neg_0(SOC_values);  % SOC = 0일 때 음극 OCP
OCP_pos_values_0 = Uocp_pos_0(SOC_values);  % SOC = 0일 때 양극 OCP
OCP_neg_values_100 = Uocp_neg_100(SOC_values);  % SOC = 100일 때 음극 OCP
OCP_pos_values_100 = Uocp_pos_100(SOC_values);  % SOC = 100일 때 양극 OCP

% SOC에 대한 OCP 미분 계산 (온도에 대한 미분값)
dOCP_dT_neg_0 = diff(OCP_neg_values_0) / (SOC_values(2) - SOC_values(1));  % 음극 OCP 미분 (SOC = 0)
dOCP_dT_pos_0 = diff(OCP_pos_values_0) / (SOC_values(2) - SOC_values(1));  % 양극 OCP 미분 (SOC = 0)
dOCP_dT_neg_100 = diff(OCP_neg_values_100) / (SOC_values(2) - SOC_values(1));  % 음극 OCP 미분 (SOC = 100)
dOCP_dT_pos_100 = diff(OCP_pos_values_100) / (SOC_values(2) - SOC_values(1));  % 양극 OCP 미분 (SOC = 100)

%% 전극 및 파라미터 설정
Tref = 298.15;  % 기준 온도 (K)
R = 8.314;      % 기체 상수 (J/mol·K)
F = 96485;      % 패러데이 상수 (C/mol)

% 표면적 계산 (a_s = 3 * eps_e / r_s)
a_s_neg = 3 * 0.6 / 1.25e-5;  % 음극 표면적 (m^-1)
a_s_pos = 3 * 0.5 / 8.50e-6;  % 양극 표면적 (m^-1)

%% 전류 밀도 및 농도 (ROM과 FOM)
j_neg_ROM = ROM.j_neg;  % 음극 전류 밀도 (A/m^2) 
j_pos_ROM = ROM.j_pos;  % 양극 전류 밀도 (A/m^2) 
j_neg_FOM = FOM.j_neg;  % 음극 전류 밀도 (A/m^2) 
j_pos_FOM = FOM.j_pos;  % 양극 전류 밀도 (A/m^2) 

cse_neg_ROM = ROM.cse_neg;  % 음극 농도 (mol/m^3) 
cse_pos_ROM = ROM.cse_pos;  % 양극 농도 (mol/m^3) 
cse_neg_FOM = FOM.cse_neg;  % 음극 농도 (mol/m^3) 
cse_pos_FOM = FOM.cse_pos;  % 양극 농도 (mol/m^3) 


%% ROM1 모델 계산 (사다리꼴 적분을 통한 ROM1 계산)
q_r_rom1_neg = 0;
q_r_rom1_pos = 0;

for i = 1:length(zi)-1
    j_neg_value = j_neg_ROM(i);  % 음극 전류 밀도 (ROM)
    j_pos_value = j_pos_ROM(i);  % 양극 전류 밀도 (ROM)
    
    % SOC에 따른 OCP 미분값
    dU_dT_neg = dOCP_dT_neg_0(i);  % 음극 OCP 미분 (SOC 값에 따른 미분)
    dU_dT_pos = dOCP_dT_pos_0(i);  % 양극 OCP 미분 (SOC 값에 따른 미분)
    
    q_r_rom1_neg = q_r_rom1_neg + a_s_neg * F * Tref * j_neg_value * dU_dT_neg * delta_z;
    q_r_rom1_pos = q_r_rom1_pos + a_s_pos * F * Tref * j_pos_value * dU_dT_pos * delta_z;
end

%% ROM4 모델 계산


A = 1;  % 전극 표면적 (m^2)

% 전류 밀도 (j_neg, j_pos)에서 전류(i_app) 계산
i_app_neg = ROM.j_neg * A;  % 음극 전류 (전류 밀도 * 면적)
i_app_pos = ROM.j_pos * A;  % 양극 전류 (전류 밀도 * 면적)

% 농도 평균 (음극, 양극)
c_avg_neg = mean(ROM.cse_neg);  % 음극 농도의 평균
c_avg_pos = mean(ROM.cse_pos);  % 양극 농도의 평균

for i = 1:length(zi)-1
    j_neg_value = j_neg_ROM(i);  % 음극 전류 밀도 (ROM)
    j_pos_value = j_pos_ROM(i);  % 양극 전류 밀도 (ROM)
    
    % SOC에 따른 OCP 미분값
    dU_dT_neg = dOCP_dT_neg_0(i);  % 음극 OCP 미분 (SOC 값에 따른 미분)
    dU_dT_pos = dOCP_dT_pos_0(i);  % 양극 OCP 미분 (SOC 값에 따른 미분)
    
    q_r_rom4_neg = (i_app_neg .* Tref .* dU_dT_neg .* c_avg_neg) / A;  
    q_r_rom4_pos = (i_app_pos .* Tref .* dU_dT_pos .* c_avg_pos) / A;
end

%% FOM 모델 계산 

A = 1;  % 전극 표면적 (단위: m^2)

% 전류 밀도 (j_neg, j_pos) 사용
j_neg_FOM = ROM.j_neg;  % 음극 전류 밀도 (FOM)
j_pos_FOM = ROM.j_pos;  % 양극 전류 밀도 (FOM)

% 온도 미분 값 (dU/dT) 계산
dU_dT_neg_FOM = dOCP_dT_neg_0;  % 음극 OCP 미분 (온도에 대한 미분)
dU_dT_pos_FOM = dOCP_dT_pos_0;  % 양극 OCP 미분 (온도에 대한 미분)

% 사다리꼴 적분 (zi 구간에 대한 적분 계산)
zi = [0, 0.25, 0.5, 0.75, 1];  % zi 값 (음극, 양극에 대한 구간)
delta_z = diff(zi);  % zi 간격 (구간의 크기)

% FOM 계산식 (j * dU/dT * A * delta_z)
q_r_fom_neg = 0;  % 음극 FOM 열 생성량 초기화
q_r_fom_pos = 0;  % 양극 FOM 열 생성량 초기화

for i = 1:length(zi)-1
    q_r_fom_neg = q_r_fom_neg + (j_neg_FOM(i) * dU_dT_neg_FOM(i) * A * delta_z(i));
    q_r_fom_pos = q_r_fom_pos + (j_pos_FOM(i) * dU_dT_pos_FOM(i) * A * delta_z(i));
end

%% 모델 plot
% 시간 값 생성 (0에서 100초까지 30개 값으로)
time_values = linspace(0, 100, 30);  % 시간 (0~100초, 30개 값)


% 그래프 그리기
figure;
% 각 모델에 대한 그래프를 한 번에 그리고 범례를 수동으로 설정
plot(time_values, q_r_fom_neg, 'b-', 'LineWidth', 2); hold on;  % FOM 음극 (파란색 실선)
plot(time_values, q_r_fom_pos, 'r-', 'LineWidth', 2);  % FOM 양극 (빨간색 실선)

plot(time_values, q_r_rom1_neg, 'b:', 'LineWidth', 2);  % ROM1 음극 (파란색 점선)
plot(time_values, q_r_rom1_pos, 'r:', 'LineWidth', 2);  % ROM1 양극 (빨간색 점선)

plot(time_values, q_r_rom4_neg, 'b--', 'LineWidth', 2);  % ROM4 음극 (파란색 대시선)
plot(time_values, q_r_rom4_pos, 'r--', 'LineWidth', 2);  % ROM4 양극 (빨간색 대시선)

% X축 및 Y축 레이블 설정
xlabel('Time (s)');  % X축 레이블 (시간)
ylabel('Heat (W)');  % Y축 레이블 (열 생성량)
title('Reversible Heat (FOM, ROM1, ROM4)');  % 제목

% 범례 설정 (각각 명시적으로 범례를 추가)
legend('FOM 음극', 'FOM 양극', 'ROM1 음극', 'ROM1 양극', 'ROM4 음극', 'ROM4 양극', 'Location', 'best');

% 그리드 추가
grid on;  
hold off;

